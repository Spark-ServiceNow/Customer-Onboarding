<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_transform_map">
    <sys_transform_map action="INSERT_OR_UPDATE">
        <active>true</active>
        <copy_empty_fields>false</copy_empty_fields>
        <enforce_mandatory_fields>No</enforce_mandatory_fields>
        <name>Record_Producer_TransformMap_User</name>
        <order>100</order>
        <run_business_rules>true</run_business_rules>
        <run_script>true</run_script>
        <script><![CDATA[// =============================================================
// Author: 		    Ronald Lob
// Script Type:     [Transform Map] Customer Onboarding - User Transform
// Script Name:	    Customer Onboarding - User Transform
// Script Version:	1.0
// Script Desc:	    Transform map to make use of the CRUD API rather than standard field mappings.
//                  This allows us to unify the validation and have a single API for these creates.
//                  Only applicible to Bulk inserts or updates. Indvididual records handled with Workflow. 
//
// ==========
// Revisions:
// ==========				
// 31/01/2018 - [Version 1.0][Ronald Lob] Development.
// =============================================================

(function transformRow(source, target, map, log, isUpdate) {
	
	var user = new User();

	gs.info('[Customer Onboarding][TM][User] Begin Request User Load Transform Map: ' + source.u_user_name);
	
	ignore = true; // Otherwise we create blank rows because there's no actual transform mapping
	
	// Lets check if this User already exists, if it doesn't ... create. If it does ... update.
	var gr = user.ValidateDuplicate(source.u_user_name, source.u_employee_number, source.u_first_name, source.u_last_name, source.u_email_address);
	
	if (gr.isValidRecord() == true && (source.u_existing_record_found == "Insert or Update" || source.u_existing_record_found == "Update Only")) { 
		// Here we need to call the Update action because the User already exists and the duplicate flag is set.
		
		gs.info('[Customer Onboarding][TM][User] User already exists in ServiceNow. Updating.');
		
		// Update any changed values only
		if (gr.employee_number != source.u_employee_number) { user.Update(gr.sys_id,"employee_number",source.u_employee_number); }
		if (gr.user_name != source.u_user_name) { user.Update(gr.sys_id,"user_name",source.u_user_name); }
		if (gr.password != source.u_password) { user.Update(gr.sys_id,"password",source.u_password); }
		if (gr.first_name != source.u_first_name) { user.Update(gr.sys_id,"first_name",source.u_first_name); }
		if (gr.last_name != source.u_last_name) { user.Update(gr.sys_id,"last_name",source.u_last_name); }
		if (gr.vip != source.u_vip) { user.Update(gr.sys_id,"vip",source.u_vip); }
		if (gr.company != source.u_company) { user.Update(gr.sys_id,"company",source.u_company); }
		if (gr.department != source.u_department) { user.Update(gr.sys_id,"department",source.u_department); }
		if (gr.building != source.u_building) { user.Update(gr.sys_id,"building",source.u_building); }
		if (gr.location != source.u_location) { user.Update(gr.sys_id,"location",source.u_location); }
		if (gr.gender != source.u_gender) { user.Update(gr.sys_id,"gender",source.u_gender); }
		if (gr.email != source.u_email_address) { user.Update(gr.sys_id,"email",source.u_email_address); }
		if (gr.mobile_phone != source.u_phone_number) { user.Update(gr.sys_id,"mobile_phone",source.u_phone_number); }
		if (gr.manager != source.u_manager) { user.Update(gr.sys_id,"manager",source.u_manager); }
		if (gr.cost_center != source.u_cost_center) { user.Update(gr.sys_id,"cost_center",source.u_cost_center); }
		
		gs.info('[Customer Onboarding][TM][User] User with the name of ' + source.u_first_name + ' ' + source.u_last_name + ' has been updated.');
		
	} else if (gr.isValidRecord() == false && source.u_existing_record_found != "Update Only") { // Lets Create a new User because none exists with that name

		gs.info('[Customer Onboarding][TM][User] No existing User found with the name ' + source.u_first_name + ' ' + source.u_last_name + '. create a new record.');
		
		var sys_id = user.Create(true, source.u_user_name, source.u_password, source.u_employee_number, source.u_first_name, source.u_last_name, source.u_vip, source.u_company, source.u_department, source.u_building, source.u_location, source.u_gender, source.u_email_address, source.u_phone_number, source.u_manager, source.u_cost_center);
			
		if (sys_id) {
			gs.info('[Customer Onboarding][TM][User] ' + source.u_first_name + ' ' + source.u_last_name + ' successfully created with sys_id = ' + sys_id);
			return;
		} else { 
			gs.info('[Customer Onboarding][TM][User] ' + source.u_first_name + ' ' + source.u_last_name + ' could not be created.');	
			ignore = true;
		}
		
	} else if (gr.isValidRecord() == false && source.u_existing_record_found == "Update Only" ) {
		gs.info('[Customer Onboarding][TM][User] No existing User found with the name ' + source.u_first_name + ' ' + source.u_last_name + '. Set to Update Only. Exit');
	} else if (gr.isValidRecord() == true && source.u_existing_record_found == "Insert Only" ) {
		gs.info('[Customer Onboarding][TM][User] User with the name of ' + source.u_first_name + ' ' + source.u_last_name + ' found. Set to Insert Only. Exit');
	}
	
})(source, target, map, log, action==="update");]]></script>
        <source_table>x_133853_customer_record_producer_importsettable_user</source_table>
        <sys_class_name>sys_transform_map</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-01-31 04:26:52</sys_created_on>
        <sys_id>135157a0db40130043055740cf9619c6</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>Record_Producer_TransformMap_User</sys_name>
        <sys_package display_value="Customer Onboarding" source="x_133853_customer">fe08bfd10f020300d1ac8f8ce1050ee1</sys_package>
        <sys_policy/>
        <sys_scope display_value="Customer Onboarding">fe08bfd10f020300d1ac8f8ce1050ee1</sys_scope>
        <sys_update_name>sys_transform_map_135157a0db40130043055740cf9619c6</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-02-05 03:39:14</sys_updated_on>
        <target_table>sys_user</target_table>
    </sys_transform_map>
</record_update>
