<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_133853_customer.Group</api_name>
        <client_callable>false</client_callable>
        <description>CRUD API Class for managing Group records.</description>
        <name>Group</name>
        <script><![CDATA[// =============================================================
// Author: 		    Ronald Lob
// Script Type:     [Script Include] Customer Onboarding - Group API
// Script Name:	    Customer Onboarding - Group API
// Script Version:	1.00
// Script Desc:	    API for CRUD functionality on Group table. 
//                  Differs from standard Table / REST API as it's specific to this application.
//                  Cascading of Creates / Updates / Deletes.
// ==========
// Revisions:
// ==========				
// 11/12/2017 - [Version 1.0][Ronald Lob]  	Development.
// =============================================================

var Group = Class.create();

Group.prototype = {
    initialize: function() {},
	
	// .. 
	// Creates a new record in Group
	// .. 
	Create: function(group_active, group_cost_center, group_default_assignee, group_description, group_email, group_exclude_manager, group_include_members, group_manager, group_name, group_parent, group_roles, group_type){
		
		gs.info('[Customer Onboarding][SI][Group] Create a new Group in ServiceNow.');
		
		// Check if the Group exists already or not
		var gr = this.Get_Name(group_name);
		
		if (gr.isValidRecord() == true) {
			gs.info('[Customer Onboarding][SI][Group] Group already exists. Exit');
			return false;
		}
	
		gr = new GlideRecord('sys_user_group');
		gr.initialize();
		gr.active = group_active;
		gr.cost_center = group_cost_center;
		gr.default_assignee = group_default_assignee;
		gr.description = group_description;
		gr.email = group_email;
		gr.exclude_manager = group_exclude_manager;
		gr.include_members = group_include_members;
		gr.manager = group_manager;
		gr.name = group_name;
		gr.parent = group_parent;
		gr.roles = group_roles;
		gr.type = group_type;
		
		var sys_id = gr.insert();

		if (sys_id) {
			gs.info('[Customer Onboarding][SI][Group] New Group record created successfully: ' + sysId);
			return true;
		} else {
			gs.info('[Customer Onboarding][SI][Group] New Group record not created successfully: ' + sysId);
			return false;
		}
	},
	
	// .. 
	// Returns a record from provided sys_id
	// .. 
	Get_SysID: function(sys_id){
		
		gs.info('[Customer Onboarding][SI][Group] Get Group with sys_id = ' + sys_id);
	
		gr = new GlideRecord('sys_user_group');
		gr.addQuery('sys_id',sys_id);
		gr.query();
		gr.next();
		
		return gr;
	},
	
	// .. 
	// Returns a Group record from provided Name
	// .. 
	Get_Name: function(group_name){
		
		gs.info('[Customer Onboarding][SI][Group] Get Group with name = ' + group_name);
	
		gr = new GlideRecord('sys_user_group');
		gr.addQuery('name',group_name);
		gr.query();
		gr.next();

		return gr;	
	},
	
	// .. 
	// Deletes an existing Group record from provided sys_id
	// .. 
	Delete: function(sys_id){
		
		gs.info('[Customer Onboarding][SI][Group] Delete Group with sys_id = ' + sys_id);
		
		var gr = this.Get_SysID(sys_id);
		var bool;
	
		if (gr.isValidRecord() == true) {
			gr.next();
			bool = gr.deleteRecord();
		} else {
			return false;
		}

		return bool;
	},
	
	// .. 
	// Updates one field in an existing record from provided sys_id, column name, and value
	// .. 
	Update: function(sys_id, column, value){
		
		gs.info('[Customer Onboarding][SI][Group] Updating Group with sys_id = ' + sys_id);
	
		var gr = this.Get_SysID(sys_id);
		
		if (gr.isValidRecord() == true) {	
			gr[column] = value;
			var bool = gr.update();
			return true;
		} else {
			gs.info('[Customer Onboarding][SI][Group] Couldnt find valid record from provided Sys_ID: ' + sys_id);
			return false;
		}
		
	},

    type: 'Group'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-12-11 01:18:43</sys_created_on>
        <sys_id>710d00500f430300d1ac8f8ce1050e05</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Group</sys_name>
        <sys_package display_value="Customer Onboarding" source="x_133853_customer">fe08bfd10f020300d1ac8f8ce1050ee1</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Customer Onboarding">fe08bfd10f020300d1ac8f8ce1050ee1</sys_scope>
        <sys_update_name>sys_script_include_710d00500f430300d1ac8f8ce1050e05</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2017-12-11 01:18:43</sys_updated_on>
    </sys_script_include>
</record_update>
